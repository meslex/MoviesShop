// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesShop.Data;

namespace MoviesShop.Migrations
{
    [DbContext(typeof(MovieShopContex))]
    [Migration("20190415174540_ActorsSeeding")]
    partial class ActorsSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MoviesShop.Models.Actor", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("Country");

                    b.Property<string>("Firstname");

                    b.Property<string>("Surname");

                    b.HasKey("ActorId");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            ActorId = 1,
                            Birthday = new DateTime(1971, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "USA",
                            Firstname = "Winona",
                            Surname = "Ryder"
                        },
                        new
                        {
                            ActorId = 2,
                            Birthday = new DateTime(1969, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "USA",
                            Firstname = "Christian",
                            Surname = "Slater"
                        },
                        new
                        {
                            ActorId = 3,
                            Birthday = new DateTime(1959, 7, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "USA",
                            Firstname = "Kevin",
                            Surname = "Spacey"
                        },
                        new
                        {
                            ActorId = 4,
                            Birthday = new DateTime(1958, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "USA",
                            Firstname = "Annette",
                            Surname = "Bening"
                        });
                });

            modelBuilder.Entity("MoviesShop.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Title");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Description = "Comedy is a genre of film in which the main emphasis is on humour. These films are designed to make the audience laugh through amusement and most often work by exaggerating characteristics for humorous effect.",
                            Title = "Comedy"
                        },
                        new
                        {
                            GenreId = 2,
                            Description = "In film and television, drama is a genre of narrative fiction (or semi-fiction) intended to be more serious than humorous in tone. Drama of this kind is usually qualified with additional terms that specify its particular subgenre, such as police crime drama, political drama, legal drama, historical period drama, domestic drama, or comedy - drama.",
                            Title = "Drama"
                        });
                });

            modelBuilder.Entity("MoviesShop.Models.MainActors", b =>
                {
                    b.Property<int>("ActorId");

                    b.Property<int>("MovieId");

                    b.HasKey("ActorId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("MainActors");

                    b.HasData(
                        new
                        {
                            ActorId = 1,
                            MovieId = 1
                        },
                        new
                        {
                            ActorId = 2,
                            MovieId = 1
                        },
                        new
                        {
                            ActorId = 3,
                            MovieId = 2
                        },
                        new
                        {
                            ActorId = 4,
                            MovieId = 2
                        });
                });

            modelBuilder.Entity("MoviesShop.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<string>("Description");

                    b.Property<string>("Director");

                    b.Property<int>("GenreId");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProductionCompany");

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<string>("Title");

                    b.HasKey("MovieId");

                    b.HasIndex("GenreId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Country = "USA",
                            Description = "In order to get out of the snobby clique that is destroying her good-girl reputation, an intelligent teen teams up with a dark sociopath in a plot to kill the cool kids.",
                            Director = "Michael Lehman",
                            GenreId = 1,
                            Price = 13m,
                            ProductionCompany = "New World Pictures",
                            ReleaseDate = new DateTime(1989, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Heathers"
                        },
                        new
                        {
                            MovieId = 2,
                            Country = "USA",
                            Description = "A sexually frustrated suburban father has a mid-life crisis after becoming infatuated with his daughter's best friend.",
                            Director = "Sam Mendes",
                            GenreId = 2,
                            Price = 35m,
                            ProductionCompany = "DreamWorks",
                            ReleaseDate = new DateTime(1999, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "American Beauty"
                        });
                });

            modelBuilder.Entity("MoviesShop.Models.MainActors", b =>
                {
                    b.HasOne("MoviesShop.Models.Actor", "Actor")
                        .WithMany("MainActors")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MoviesShop.Models.Movie", "Movie")
                        .WithMany("MainActors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoviesShop.Models.Movie", b =>
                {
                    b.HasOne("MoviesShop.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
